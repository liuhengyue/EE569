// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;/* * ReadRaw() * Function: This function reads in image data from a RAW image file. * Input: file path of the image, size of the image. * Output: the pointer of the image array. */unsigned char* ReadRaw(const char *filename, const int width,const int length,const int bytesPerPixel){    // Allocate image data array using new() for transmiting array pointer    unsigned char *imagedata;    imagedata=new unsigned char[width*length*bytesPerPixel];    FILE *file;    // Open file    if (!(file=fopen(filename,"rb"))) {        cout << "Cannot open file: " << filename <<endl;        exit(1);    }    fread(imagedata, sizeof(unsigned char), width*length*bytesPerPixel, file);    fclose(file);    //delete Imagedata; may use later    return imagedata;//return the address of the first pixel}/* * WriteRaw() * Function: This function write image data from a in a RAW file. * Input: file path one wants to create, image data array pointer, size of the image. */void WriteRaw(const char *path, unsigned char* imagePtr, const int width,const int length,  const int bytesPerPixel){    FILE *file;    //const char* path="/Users/liuhengyue/Google Drive/EE569/hw2/569HW2/569HW2/straw_01ba.raw";    if (!(file=fopen(path,"wb"))) {        cout << "Cannot open file: " << path << endl;        exit(1);    }    unsigned char outImage[length][width][bytesPerPixel];    int i=0,j=0,dim=0;    for(dim=0;dim<bytesPerPixel;dim++){        for(i=0;i<length;i++){//array row number            for(j=0;j<width;j++){//coloumn number                outImage[i][j][dim]=imagePtr[(i*width+j)*bytesPerPixel+bytesPerPixel-dim-1];            }        }    }    fwrite(outImage, sizeof(unsigned char), width*length*bytesPerPixel, file);    fclose(file);}